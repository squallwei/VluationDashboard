name: Daily Valuation Data Collection

on:
  schedule:
    # Run daily at 20:00 UTC (8 PM UTC)
    - cron: '0 20 * * *'
  workflow_dispatch: # Allow manual triggering
    inputs:
      force_update:
        description: 'Force update even if data exists for today'
        required: false
        default: 'false'
        type: boolean

jobs:
  collect-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
    
    - name: Create data directory
      run: |
        mkdir -p data
    
    - name: Collect valuation data
      run: |
        python scripts/collect_data.py
      env:
        FORCE_UPDATE: ${{ github.event.inputs.force_update || 'false' }}
    
    - name: Check for changes
      id: git-check
      run: |
        git diff --exit-code data/valuation_history.json || echo "changes=true" >> $GITHUB_OUTPUT
    
    - name: Commit and push changes
      if: steps.git-check.outputs.changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data/valuation_history.json
        git commit -m "📊 Daily data update: $(date +'%Y-%m-%d')"
        git push
    
    - name: Create summary
      if: steps.git-check.outputs.changes == 'true'
      run: |
        echo "## 📊 Daily Data Collection Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Date**: $(date +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ✅ Data collected and committed" >> $GITHUB_STEP_SUMMARY
        echo "- **File**: \`data/valuation_history.json\`" >> $GITHUB_STEP_SUMMARY
        
        # Get file size and record count
        FILE_SIZE=$(du -h data/valuation_history.json | cut -f1)
        RECORD_COUNT=$(python -c "import json; data=json.load(open('data/valuation_history.json')); print(len(data))")
        
        echo "- **File Size**: $FILE_SIZE" >> $GITHUB_STEP_SUMMARY
        echo "- **Total Records**: $RECORD_COUNT" >> $GITHUB_STEP_SUMMARY
    
    - name: No changes summary
      if: steps.git-check.outputs.changes != 'true'
      run: |
        echo "## 📊 Daily Data Collection Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Date**: $(date +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ℹ️ No new data (already exists for today)" >> $GITHUB_STEP_SUMMARY
        echo "- **File**: \`data/valuation_history.json\`" >> $GITHUB_STEP_SUMMARY 